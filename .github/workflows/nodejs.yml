name: Node CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-monorepo

      - name: Lint
        run: pnpm lint

      - name: Build
        run: pnpm build

      - name: Test
        run: pnpm test

  test-sigle-e2e:
    name: Test sigle e2e
    runs-on: ubuntu-20.04
    container:
      image: mcr.microsoft.com/playwright:v1.36.0-jammy
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-monorepo

      - name: Install Playwright Browsers
        run: pnpm playwright install --with-deps chromium
        working-directory: sigle

      - name: Build sigle
        run: pnpm build --scope=@sigle/app

      - name: Run sigle e2e tests
        run: pnpm run test:e2e
        working-directory: sigle

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: sigle/playwright-report
          path: sigle/playwright-report/
          retention-days: 10

  test-server-e2e:
    name: Test server e2e
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: server
    services:
      redis:
        image: redis:6.2
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      postgres:
        # Docker Hub image
        image: postgres:14
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgresuser
          POSTGRES_PASSWORD: postgrespassword
          POSTGRES_DB: postgresdb
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-monorepo

      - name: Seed test DB
        run: pnpm prisma migrate deploy && pnpm prisma db seed
        env:
          PG_DATABASE_URL: 'postgres://postgresuser:postgrespassword@localhost:5432/postgresdb'

      - name: Run api e2e tests
        run: pnpm run test:e2e
