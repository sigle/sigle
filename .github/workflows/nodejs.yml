name: Node CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-sigle:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: sigle
    strategy:
      matrix:
        node-version: [18]

    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Get next.js sigle cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/sigle/.next/cache
          key: ${{ runner.os }}-nextjs-sigle-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install Dependencies
        run: pnpm install --filter={.}...

      - name: Build sigle
        run: pnpm run build

      - name: Run sigle tests
        run: pnpm run test

  test-api:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: server
    strategy:
      matrix:
        node-version: [18]
    services:
      redis:
        image: redis:6.2
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      postgres:
        # Docker Hub image
        image: postgres:14
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgresuser
          POSTGRES_PASSWORD: postgrespassword
          POSTGRES_DB: postgresdb
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --filter={.}...

      - name: Lint api
        run: pnpm run lint

      - name: Build api
        run: pnpm run build

      - name: Run api tests
        run: pnpm run test

      - name: Seed test DB
        run: pnpm prisma migrate deploy && pnpm prisma db seed
        env:
          PG_DATABASE_URL: 'postgres://postgresuser:postgrespassword@localhost:5432/postgresdb'

      - name: Run api e2e tests
        run: pnpm run test:e2e

  test-sigle-next:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: apps/sigle-next
    strategy:
      matrix:
        node-version: [18]

    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Get next.js sigle cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/apps/sigle-next/.next/cache
          key: ${{ runner.os }}-nextjs-sigle-next-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install Dependencies
        run: pnpm install --filter={.}...

      - name: Build sigle
        run: pnpm run build

      - name: Test sigle
        run: pnpm run test

      - name: Build storybook
        run: pnpm run build-storybook

  test-custom-domain:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: apps/custom-domain
    strategy:
      matrix:
        node-version: [18]

    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Get next.js cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/apps/custom-domain/.next/cache
          key: ${{ runner.os }}-nextjs-apps-custom-domain-next-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install Dependencies
        run: pnpm install --filter={.}...

      - name: Build sigle
        run: pnpm run build
