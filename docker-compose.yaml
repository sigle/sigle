services:
  postgres:
    container_name: postgres
    image: postgres:17-alpine
    ports:
      - 5432:5432
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=sigle_password
      - POSTGRES_USER=sigle_user
      - POSTGRES_DB=sigle_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d sigle_db -U sigle_user"]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - sigle-network

  server:
    build:
      context: ./
      dockerfile: ./apps/server/Dockerfile.dev
    restart: always
    ports:
      - "3001:3001"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://sigle_user:sigle_password@postgres:5432/sigle_db?sslmode=disable
    develop:
      watch:
        - path: ./apps/server/package.json
          action: rebuild
        - path: ./apps/server/prisma
          action: rebuild
        - path: ./apps/server/
          target: /app/apps/server
          action: sync
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - sigle-network

  cloudflared:
    image: cloudflare/cloudflared:2025.2.1
    container_name: cloudflared
    restart: unless-stopped
    command: tunnel --url http://server:3001
    depends_on:
      - server-indexer
    networks:
      - sigle-network

volumes:
  postgres_data:

networks:
  sigle-network:
    driver: bridge
